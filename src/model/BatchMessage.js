/**
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TheSmsWorksApi) {
      root.TheSmsWorksApi = {};
    }
    root.TheSmsWorksApi.BatchMessage = factory(root.TheSmsWorksApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BatchMessage model module.
   * @module model/BatchMessage
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>BatchMessage</code>.
   * SMS Message Batch
   * @alias module:model/BatchMessage
   * @class
   * @param sender {String} The sender of the message. Should be no longer than 11 characters for alphanumeric or 15 characters for numeric sender ID's. No spaces or special characters.
   * @param destinations {Array.<String>} Telephone numbers of each of the recipients
   * @param content {String} Message to send to the recipient
   * @param schedule {String} Date-time at which to send the batch. This is only used by the batch/schedule service.
   */
  var exports = function(sender, destinations, content, schedule) {
    var _this = this;

    _this['sender'] = sender;
    _this['destinations'] = destinations;
    _this['content'] = content;
    _this['schedule'] = schedule;
  };

  /**
   * Constructs a <code>BatchMessage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchMessage} obj Optional instance to populate.
   * @return {module:model/BatchMessage} The populated <code>BatchMessage</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('sender')) {
        obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
      }
      if (data.hasOwnProperty('destinations')) {
        obj['destinations'] = ApiClient.convertToType(data['destinations'], ['String']);
      }
      if (data.hasOwnProperty('content')) {
        obj['content'] = ApiClient.convertToType(data['content'], 'String');
      }
      if (data.hasOwnProperty('schedule')) {
        obj['schedule'] = ApiClient.convertToType(data['schedule'], 'String');
      }
    }
    return obj;
  }

  /**
   * The sender of the message. Should be no longer than 11 characters for alphanumeric or 15 characters for numeric sender ID's. No spaces or special characters.
   * @member {String} sender
   */
  exports.prototype['sender'] = undefined;
  /**
   * Telephone numbers of each of the recipients
   * @member {Array.<String>} destinations
   */
  exports.prototype['destinations'] = undefined;
  /**
   * Message to send to the recipient
   * @member {String} content
   */
  exports.prototype['content'] = undefined;
  /**
   * Date-time at which to send the batch. This is only used by the batch/schedule service.
   * @member {String} schedule
   */
  exports.prototype['schedule'] = undefined;



  return exports;
}));


