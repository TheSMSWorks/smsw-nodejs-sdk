/**
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * OpenAPI spec version: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BigDecimal from './BigDecimal';

/**
* The Message model module.
* @module model/Message
* @version 1.6.0
*/
export default class Message {
    /**
    * Constructs a new <code>Message</code>.
    * SMS message object
    * @alias module:model/Message
    * @class
    * @param sender {String} The sender of the message. Should be no longer than 11 characters for alphanumeric or 15 characters for numeric sender ID's. No spaces or special characters.
    * @param destination {String} Telephone number of the recipient
    * @param content {String} Message to send to the recipient. Content can be up to 1280 characters in length. Messages of 160 characters or fewer are charged 1 credit. If your message is longer than 160 characters then it will be broken down in to chunks of 153 characters before being sent to the recipient's handset, and you will be charged 1 credit for each 153 characters. Messages sent to numbers registered outside the UK will be typically charged double credits, but for certain countries may be charged fractions of credits (e.g. 2.5). Please contact us for rates for each country.
    */

    constructor(sender, destination, content) {
        
        
        this['sender'] = sender;
        this['destination'] = destination;
        this['content'] = content;
        
    }

    /**
    * Constructs a <code>Message</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Message} obj Optional instance to populate.
    * @return {module:model/Message} The populated <code>Message</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Message();
                        
            
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('deliveryreporturl')) {
                obj['deliveryreporturl'] = ApiClient.convertToType(data['deliveryreporturl'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], BigDecimal);
            }
            if (data.hasOwnProperty('responseemail')) {
                obj['responseemail'] = ApiClient.convertToType(data['responseemail'], ['String']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('validity')) {
                obj['validity'] = ApiClient.convertToType(data['validity'], BigDecimal);
            }
        }
        return obj;
    }

    /**
    * The sender of the message. Should be no longer than 11 characters for alphanumeric or 15 characters for numeric sender ID's. No spaces or special characters.
    * @member {String} sender
    */
    sender = undefined;
    /**
    * Telephone number of the recipient
    * @member {String} destination
    */
    destination = undefined;
    /**
    * Message to send to the recipient. Content can be up to 1280 characters in length. Messages of 160 characters or fewer are charged 1 credit. If your message is longer than 160 characters then it will be broken down in to chunks of 153 characters before being sent to the recipient's handset, and you will be charged 1 credit for each 153 characters. Messages sent to numbers registered outside the UK will be typically charged double credits, but for certain countries may be charged fractions of credits (e.g. 2.5). Please contact us for rates for each country.
    * @member {String} content
    */
    content = undefined;
    /**
    * The url to which we should POST delivery reports to for this message. If none is specified, we'll use the global delivery report URL that you've configured on your account page.
    * @member {String} deliveryreporturl
    */
    deliveryreporturl = undefined;
    /**
    * Date at which to send the message. This is only used by the message/schedule service and can be left empty for other services.
    * @member {String} schedule
    */
    schedule = undefined;
    /**
    * An identifying label for the message, which you can use to filter and report on messages you've sent later. Ideal for campaigns. A maximum of 280 characters.
    * @member {String} tag
    */
    tag = undefined;
    /**
    * The optional number of minutes before the delivery report is deleted. Optional. Omit to prevent delivery report deletion. Integer.
    * @member {module:model/BigDecimal} ttl
    */
    ttl = undefined;
    /**
    * An optional list of email addresses to forward responses to this specific message to. An SMS Works Reply Number is required to use this feature.
    * @member {Array.<String>} responseemail
    */
    responseemail = undefined;
    /**
    * @member {Object} metadata
    */
    metadata = undefined;
    /**
    * The optional number of minutes to attempt delivery before the message is marked as EXPIRED. Optional. The default is 2880 minutes. Integer.
    * @member {module:model/BigDecimal} validity
    */
    validity = undefined;




}
