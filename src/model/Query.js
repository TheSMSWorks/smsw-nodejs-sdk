/**
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TheSmsWorksApi) {
      root.TheSmsWorksApi = {};
    }
    root.TheSmsWorksApi.Query = factory(root.TheSmsWorksApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Query model module.
   * @module model/Query
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Query</code>.
   * search parameters for querying the message database
   * @alias module:model/Query
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>Query</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Query} obj Optional instance to populate.
   * @return {module:model/Query} The populated <code>Query</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('destination')) {
        obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
      }
      if (data.hasOwnProperty('sender')) {
        obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
      }
      if (data.hasOwnProperty('keyword')) {
        obj['keyword'] = ApiClient.convertToType(data['keyword'], 'String');
      }
      if (data.hasOwnProperty('from')) {
        obj['from'] = ApiClient.convertToType(data['from'], 'String');
      }
      if (data.hasOwnProperty('to')) {
        obj['to'] = ApiClient.convertToType(data['to'], 'String');
      }
    }
    return obj;
  }

  /**
   * The status of the messages you would like returned (either 'SENT', 'DELIVERED', 'EXPIRED', 'DELETED', 'UNDELIVERABLE', 'ACCEPTED', 'UNKNOWN', 'REJECTED')
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The phone number of the recipient. Start UK numbers with 44 and drop the leading 0.
   * @member {String} destination
   */
  exports.prototype['destination'] = undefined;
  /**
   * The sender of the message (this can be the configured sender name for an outbound message or the senders phone number for an inbound message).
   * @member {String} sender
   */
  exports.prototype['sender'] = undefined;
  /**
   * The keyword used in the inbound message
   * @member {String} keyword
   */
  exports.prototype['keyword'] = undefined;
  /**
   * The date-time from which you would like matching messages
   * @member {String} from
   */
  exports.prototype['from'] = undefined;
  /**
   * The date-time to which you would like matching messages
   * @member {String} to
   */
  exports.prototype['to'] = undefined;



  return exports;
}));


