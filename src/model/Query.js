/**
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * OpenAPI spec version: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BigDecimal from './BigDecimal';

/**
* The Query model module.
* @module model/Query
* @version 1.6.0
*/
export default class Query {
    /**
    * Constructs a new <code>Query</code>.
    * search parameters for querying the message database
    * @alias module:model/Query
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Query</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Query} obj Optional instance to populate.
    * @return {module:model/Query} The populated <code>Query</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Query();
                        
            
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('credits')) {
                obj['credits'] = ApiClient.convertToType(data['credits'], BigDecimal);
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
            }
            if (data.hasOwnProperty('keyword')) {
                obj['keyword'] = ApiClient.convertToType(data['keyword'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('unread')) {
                obj['unread'] = ApiClient.convertToType(data['unread'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
    * The status of the messages you would like returned (either 'SENT', 'DELIVERED', 'EXPIRED', 'UNDELIVERABLE', 'REJECTED' or 'INCOMING')
    * @member {String} status
    */
    status = undefined;
    /**
    * The number of credits used on the message. Floating point number.
    * @member {module:model/BigDecimal} credits
    */
    credits = undefined;
    /**
    * The phone number of the recipient. Start UK numbers with 44 and drop the leading 0.
    * @member {String} destination
    */
    destination = undefined;
    /**
    * The sender of the message (this can be the configured sender name for an outbound message or the senders phone number for an inbound message).
    * @member {String} sender
    */
    sender = undefined;
    /**
    * The keyword used in the inbound message
    * @member {String} keyword
    */
    keyword = undefined;
    /**
    * The date-time from which you would like matching messages
    * @member {String} from
    */
    from = undefined;
    /**
    * The date-time to which you would like matching messages
    * @member {String} to
    */
    to = undefined;
    /**
    * In queries for incoming messages ('status' is 'INCOMING'), specify whether you explicitly want unread messages (true) or read messages (false). Omit this parameter in other circumstances.
    * @member {Boolean} unread
    */
    unread = undefined;
    /**
    * An array of objects containing metadata key/value pairs that have been saved on messages.
    * @member {Object} metadata
    */
    metadata = undefined;




}
