/**
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * OpenAPI spec version: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import CreditsResponse from '../model/CreditsResponse';
import ErrorModel from '../model/ErrorModel';

/**
* Credits service.
* @module api/CreditsApi
* @version 1.6.0
*/
export default class CreditsApi {

    /**
    * Constructs a new CreditsApi. 
    * @alias module:api/CreditsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the credits operation.
     * @callback module:api/CreditsApi~creditsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreditsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the number of credits currently available on the account
     * @param {module:api/CreditsApi~creditsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreditsResponse}
     */
    credits(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWT'];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = CreditsResponse;

      return this.apiClient.callApi(
        '/credits/balance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
